#!/bin/bash

# Check if the correct number of arguments are provided
if [ "$#" -ne 2 ]; then
    echo "Usage: $0 domain output_file"
    exit 1
fi

# Assign the arguments to variables
domain=$1
output_file=$2

# Check if required tools are installed
for tool in subfinder assetfinder httprobe waybackurls hakrawler anew python3; do
    if ! command -v $tool &> /dev/null; then
        echo "$tool is required but not installed. Please install it first."
        exit 1
    fi
done

# Run the command and append the results to the output file
subfinder -d $domain -silent | assetfinder --subs-only | httprobe -c 50 | tee temp_urls.txt | { while read url; do echo $url | waybackurls; echo $url | hakrawler; done } | sort -u | anew $output_file && rm temp_urls.txt
# Check if a cron job for this script already exists
cron_job_exists=$(crontab -l | grep -F "$0 $domain $output_file")

if [ -n "$cron_job_exists" ]; then
    # Ask the user if they want to remove the existing cron job
    read -p "A cron job for this script already exists. Do you want to remove it? (y/n) " -n 1 -r
    echo
    if [[ $REPLY =~ ^[Yy]$ ]]; then
        # Remove the existing cron job
        (crontab -l | grep -vF "$0 $domain $output_file") | crontab -
    fi
else
    # Ask the user if they want to register this script as a cron job
    read -p "Do you want to register this script as a cron job? (y/n) " -n 1 -r
    echo
    if [[ $REPLY =~ ^[Yy]$ ]]; then
        # Ask the user for the frequency of the cron job
        PS3='Please enter your choice: '
        options=("Hourly" "Daily" "Weekly" "Quit")
        select opt in "${options[@]}"
        do
            case $opt in
                "Hourly")
                    (crontab -l ; echo "0 * * * * $0 $domain $output_file") | crontab -
                    break
                    ;;
                "Daily")
                    (crontab -l ; echo "0 0 * * * $0 $domain $output_file") | crontab -
                    break
                    ;;
                "Weekly")
                    (crontab -l ; echo "0 0 * * 0 $0 $domain $output_file") | crontab -
                    break
                    ;;
                "Quit")
                    break
                    ;;
                *) echo "invalid option $REPLY";;
            esac
        done
    fi
fi
