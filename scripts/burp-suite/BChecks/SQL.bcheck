metadata:
  language: v1-beta
  name: "SQLi-check"
  description: "Checks for potential SQL Injection vulnerabilities"
  author: "SecGPT"

run for each:
  potential_payload = "' OR '1'='1"

given request then
  send request called check:
    method: {request.method}
    path: {request.path}
    parameters: {request.parameters.replace("PLACEHOLDER", potential_payload)}
    body: {request.body}

  if "sql syntax" in {check.response.body.lower()} then
    report issue:
      name: "Potential SQL Injection vulnerability detected"
      severity: high
      confidence: certain
      description: "The application may be vulnerable to SQL Injection. The payload `{potential_payload}` caused a SQL syntax error in the HTTP response."
      remediation: "Implement proper input validation and parameterized queries to prevent SQL Injection attacks."
      evidence: {check.response.body}
