metadata:
  language: v1-beta
  name: "OpenRedirect-SSRF-check"
  description: "Checks for potential open redirect and SSRF vulnerabilities"
  author: "SecGPT"

run for each:
  potential_url = "http://evil.com"

given request then
  send request called check:
    method: {request.method}
    path: {request.path}
    parameters: {request.parameters.replace("PLACEHOLDER", potential_url)}
    body: {request.body}

  if {check.response.redirect_location} == "http://evil.com" then
    report issue:
      name: "Potential open redirect vulnerability detected"
      severity: high
      confidence: certain
      description: "The application may be vulnerable to open redirect attacks. The URL `{potential_url}` was redirected to."
      remediation: "Implement proper URL validation to prevent open redirect attacks."
      evidence: {check.response.body}

  if "evil.com" in {check.response.body} then
    report issue:
      name: "Potential SSRF vulnerability detected"
      severity: high
      confidence: certain
      description: "The application may be vulnerable to Server Side Request Forgery (SSRF). The URL `{potential_url}` was accessible."
      remediation: "Implement proper URL validation and network access controls to prevent SSRF attacks."
      evidence: {check.response.body}
						