#!/bin/bash

# Validate IP or domain name format using regex
function validate_input {
    local input=$1

    if [[ $input =~ ^([0-9]{1,3}\.){3}[0-9]{1,3}$|^([a-zA-Z0-9\-]+\.)+[a-zA-Z]{2,}$ ]]; then
        echo "Valid input entered: $input"
    else
        echo "Invalid input format. Please enter a valid IP address or domain name."
        exit 1
    fi
}

# Ask the user for the target host (IP or domain name)
read -p "Enter the target host (IP or domain name): " target_host

# Validate the target host input using regex
validate_input $target_host

# Check if the security report file exists
if [ -f security_report.txt ]; then
  # If the file exists, get the next count value
  count=$(ls | grep -o "security_report_[0-9]*.txt" | sed 's/security_report_\([0-9]*\)\.txt/\1/' | sort -n | tail -1)
  count=$((count + 1))
else
  # If the file does not exist, start the count at 1
  count=1
fi

# First, we'll use nmap to scan the target system and save the output to a file
echo "Running nmap scan..."
nmap -T4 -sS -p- $target_host -oN nmap_output.txt >/dev/null 2>&1
echo "nmap scan complete."

# Next, we'll use the ffuf tool to perform web content discovery on the target
# We'll use the -w option to specify a web accessible directory list and the -u option to specify the target URL
echo "Running ffuf scans..."
cat nmap_output.txt | grep "open" | awk '{print $NF}' | while read line; do
  ffuf -w http://pentestmonkey.net/dirbuster/wordlists/directory-list-2.3-medium.txt -u http://$line:80/FUZZ >> ffuf_output.txt
done
echo "ffuf scans complete."

# After that, we'll use Google dorks to search for vulnerabilities related to the ffuf findings
# We'll use the -q option to specify the search query and the -o option to save the results to a file
echo "Running Google dork searches..."
cat ffuf_output.txt | grep "200" | awk '{print $NF}' | while read line; do
  for dork_file in $(curl -sL https://github.com/Root-Down-Digital/pentesting-resources/tree/main/dorks | grep -o 'href=".*dorks.*.txt"' | grep -o '".*"' | tr -d '"'); do
    while read dork; do
      googler -q "$dork site:$line" -o googler_output.txt
    done < <(curl -sL "https://github.com$dork_file")
  done
done
echo "Google dork searches complete."

# We'll also use the gtfobins tool to find vulnerabilities related to the ffuf findings
echo "Running gtfobins scans..."
cat ffuf_output.txt | while read line; do
  gtfobins $line >> gtfobins_output.txt
done
echo "gtfobins scans complete."

# Finally, we'll append all the information we've gathered to the security report file for further analysis
echo "Logging results to security report file..."
Append nmap output to the security report

cat nmap_output.txt >> "security_report_$count.txt"

#Append output to the security report
cat ffuf_output.txt >> "security_report_$count.txt"
cat googler_output.txt >> "security_report_$count.txt"
cat gtfobins_output.txt >> "security_report_$count.txt"
echo "Results logged to security report file."

#Clean up the temporary files

echo "Cleaning up temporary files..."
rm nmap_output.txt ffuf_output.txt googler_output.txt gtfobins_output.txt
echo "Temporary files cleaned up."
