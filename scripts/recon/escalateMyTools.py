#!/usr/bin/env python3

import os
import subprocess

# Check if 'wget' is installed
def check_wget():
    return subprocess.call(["which", "wget"], stdout=subprocess.DEVNULL, stderr=subprocess.DEVNULL) == 0

# Create the 'transfers' folder if it doesn't exist
def create_transfers_folder():
    if not os.path.exists("transfers"):
        os.makedirs("transfers")
        print("Created 'transfers' folder.")

# Check if the 'transfers' folder exists
def check_transfers_folder():
    if not os.path.exists("transfers"):
        os.makedirs("transfers")

# Download the tools into the 'transfers' folder
def download_tools():
    tools = [
        {"name": "CVE-2017-0213_x64.exe", "url": "https://github.com/WindowsExploits/Exploits/raw/master/CVE-2017-0213/Binaries/CVE-2017-0213_x64.zip"},
        {"name": "Invoke-PowerShellTcp.ps1", "url": "https://raw.githubusercontent.com/samratashok/nishang/master/Shells/Invoke-PowerShellTcp.ps1"},
        {"name": "linenum.sh", "url": "https://raw.githubusercontent.com/rebootuser/LinEnum/master/LinEnum.sh"},
        {"name": "linpeas.sh", "url": "https://github.com/carlospolop/PEASS-ng/releases/latest/download/linpeas.sh"},
        {"name": "mcafee_sitelist_pwd_decrypt.py", "url": "https://raw.githubusercontent.com/funoverip/mcafee-sitelist-pwd-decryption/master/mcafee_sitelist_pwd_decrypt.py"},
        {"name": "Chimichurri-MS10-059.exe", "url": "https://github.com/egre55/windows-kernel-exploits/raw/master/MS10-059:%20Chimichurri/Compiled/Chimichurri.exe"},
        {"name": "ms15-051_x64.exe", "url": "https://github.com/SecWiki/windows-kernel-exploits/raw/master/MS15-051/Compiled/Taihou64.exe"},
        {"name": "Juicy-Potato.exe", "url": "https://github.com/ohpe/juicy-potato/releases/download/v0.1/JuicyPotato.exe"},
        {"name": "NC.exe", "url": "https://eternallybored.org/misc/netcat/netcat-win32-1.11.zip"},
        {"name": "Windows-Exploit-Suggester", "url": "https://raw.githubusercontent.com/AonCyberLabs/Windows-Exploit-Suggester/master/windows-exploit-suggester.py"},
        {"name": "PowerUp.ps1", "url": "https://raw.githubusercontent.com/PowerShellMafia/PowerSploit/master/Privesc/PowerUp.ps1"},
        {"name": "rottenpotato.exe", "url": "https://github.com/foxglovesec/RottenPotato/raw/master/rottenpotato.exe"},
        {"name": "Seatbelt.exe", "url": "https://github.com/r3motecontrol/Ghostpack-CompiledBinaries/raw/master/Seatbelt.exe"},
        {"name": "SharpUp.exe", "url": "https://github.com/r3motecontrol/Ghostpack-CompiledBinaries/raw/master/SharpUp.exe"},
        {"name": "winPEAS64.exe", "url": "https://github.com/carlospolop/PEASS-ng/releases/download/20230425-bd7331ea/winPEASx64.exe"},
        {"name": "pentestmonkey-php-reverse-shell.php", "url": "https://raw.githubusercontent.com/pentestmonkey/php-reverse-shell/master/php-reverse-shell.php"},
        {"name": "cve-2016-5195-dirtycow.c", "url": "https://raw.githubusercontent.com/dirtycow/dirtycow.github.io/master/dirtyc0w.c"},
        {"name": "cve-2019-13272-exploit.sh", "url": "https://raw.githubusercontent.com/bcoles/kernel-exploits/master/CVE-2019-13272/poc.c"},
        {"name": "cve-2020-3452-exploit.py", "url": "https://raw.githubusercontent.com/grim3/CVE-2020-3452/main/CVE-2020-3452.py"},
        {"name": "cve-2020-1472-exploit.py", "url": "https://raw.githubusercontent.com/thatonesecguy/zerologon-CVE-2020-1472/master/zero-logon-exploit.py"},
        {"name": "cve-2021-3156-exploit.c", "url": "https://raw.githubusercontent.com/CptGibbon/CVE-2021-3156/main/exploit.c"},
        {"name": "cve-2021-1675-exploit.py", "url": "https://raw.githubusercontent.com/cube0x0/CVE-2021-1675/main/CVE-2021-1675.py"}
    ]
    
    for tool in tools:
        file_name = os.path.join("transfers", tool["name"])
        url = tool["url"]

        print("Downloading {}...".format(file_name))
        subprocess.call(["wget", "-O", file_name, url])
    
        # Check if the download was successful
        if os.path.exists(file_name):
            print("{} downloaded successfully.".format(file_name))
        else:
            print("Error downloading {}. Please check the URL and try again.".format(file_name))

# Main function
def main():
    check_transfers_folder()
    download_tools()

if __name__ == "__main__":
	main()
