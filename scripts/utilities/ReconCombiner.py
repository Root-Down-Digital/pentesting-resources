#!/usr/bin/env python3
# Clean a reconFTW or other recon folder recursively.
# Delete empty files, combine & deduplicate.

import os
import sys

def combine_files_with_same_name(folder_path):
    file_contents_dict = {}
    empty_file_count = 0
    merged_file_count = 0

    for root, _, files in os.walk(folder_path):
        for file in files:
            file_path = os.path.join(root, file)
            if file.endswith('.txt'):
                if os.path.getsize(file_path) == 0:
                    os.remove(file_path)
                    empty_file_count += 1
                else:
                    file_name = os.path.splitext(file)[0]
                    with open(file_path, 'r') as f:
                        content = f.read()

                    if file_name in file_contents_dict:
                        file_contents_dict[file_name].add(content)
                    else:
                        file_contents_dict[file_name] = {content}
                    merged_file_count += 1

    for file_name, contents_set in file_contents_dict.items():
        output_file_path = os.path.join(folder_path, f'{file_name}_main.txt')
        with open(output_file_path, 'w') as f:
            for content in contents_set:
                f.write(content)

    return empty_file_count, merged_file_count

def main():
    if len(sys.argv) > 1 and (sys.argv[1] == "--help" or sys.argv[1] == "-h"):
        print("Usage: python script_name.py")
        print("This script will process files in the current folder by merging files with the same name into main files.")
        print("It will remove empty files and display the counts of empty files deleted and main files created.")
        return

    current_folder = os.getcwd()
    print(f"Current folder: {current_folder}\n")

    empty_file_count, main_file_count = combine_files_with_same_name(current_folder)

    print(f"{empty_file_count} empty files will be deleted.")
    print(f"{main_file_count} files will be merged into main files.")

    confirmation = input("Are you sure you want to proceed? (y/n): ").strip().lower()
    if confirmation != 'y':
        print("Aborted.")
        return

    print(f"\nProcessing files in {current_folder}...\n")
    combine_files_with_same_name(current_folder)

    print("Files have been merged into main files successfully.")

if __name__ == "__main__":
    main()
